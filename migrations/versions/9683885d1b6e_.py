"""empty message

Revision ID: 9683885d1b6e
Revises: 
Create Date: 2020-12-16 21:14:06.359765

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9683885d1b6e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('slack_channels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slack_channels_name'), 'slack_channels', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('slack_id', sa.String(length=20), nullable=True),
    sa.Column('gmail', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_gmail'), 'users', ['gmail'], unique=False)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_index(op.f('ix_users_slack_id'), 'users', ['slack_id'], unique=False)
    op.create_table('gmail',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.String(length=50), nullable=False),
    sa.Column('sender_name', sa.String(length=50), nullable=False),
    sa.Column('sender_email', sa.String(length=50), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('message', sa.String(length=2000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('information',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('department', sa.String(length=30), nullable=False),
    sa.Column('birthday', sa.DateTime(), nullable=False),
    sa.Column('sex', sa.String(length=5), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_information_department'), 'information', ['department'], unique=False)
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.String(length=50), nullable=False),
    sa.Column('link', sa.String(length=200), nullable=False),
    sa.Column('event_created', sa.DateTime(), nullable=False),
    sa.Column('event_updated', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=True),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('creator', sa.String(length=50), nullable=False),
    sa.Column('all_day', sa.Boolean(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('slack_channel_members',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['channel_id'], ['slack_channels.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('slack_messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.String(length=20), nullable=False),
    sa.Column('event_id', sa.String(length=20), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('event_time', sa.Integer(), nullable=False),
    sa.Column('message_time', sa.Float(precision=10), nullable=True),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=300), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['channel_id'], ['slack_channels.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slack_messages_event_type'), 'slack_messages', ['event_type'], unique=False)
    op.create_index(op.f('ix_slack_messages_team_id'), 'slack_messages', ['team_id'], unique=False)
    op.create_table('zoom_access_token',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=1000), nullable=False),
    sa.Column('refresh_token', sa.String(length=1000), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('zoom_meetings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meeting_id', sa.String(length=30), nullable=False),
    sa.Column('meeting_uuid', sa.String(length=50), nullable=False),
    sa.Column('topic', sa.String(length=100), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('meeting_created', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('zoom_messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meeting_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['meeting_id'], ['zoom_meetings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('zoom_recordings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meeting_id', sa.Integer(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('updated_at >= created_at'),
    sa.ForeignKeyConstraint(['meeting_id'], ['zoom_meetings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('zoom_recordings')
    op.drop_table('zoom_messages')
    op.drop_table('zoom_meetings')
    op.drop_table('zoom_access_token')
    op.drop_index(op.f('ix_slack_messages_team_id'), table_name='slack_messages')
    op.drop_index(op.f('ix_slack_messages_event_type'), table_name='slack_messages')
    op.drop_table('slack_messages')
    op.drop_table('slack_channel_members')
    op.drop_table('schedule')
    op.drop_index(op.f('ix_information_department'), table_name='information')
    op.drop_table('information')
    op.drop_table('gmail')
    op.drop_index(op.f('ix_users_slack_id'), table_name='users')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_gmail'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_slack_channels_name'), table_name='slack_channels')
    op.drop_table('slack_channels')
    # ### end Alembic commands ###
